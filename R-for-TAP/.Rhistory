sessionInfo()
head(world.boundaries)
typeof(world.boundaries)
class(world.boundaries)
mode(world.boundaries)
world.plot
names(world.boundaries)
continental.african.countries <- world.boundaries$ISO_Codes
continental.african.countries
world.iso.codes
head(world.names.df)
tail(world.names.df)
african.country.names
african.country.names
dim(africa.boundaries.df)
africa.plot
list.files("datasets")
head(landlocked.df.in)
levels(landlocked.df.in$Indicator)
dim(landlocked.df)
landlocked.df
head(landlocked.df)
names(landlocked.df.in)
names(africa.boundaries.df)
landlocked.africa.plot
landlocked.africa.plot
head(export.renamed)
years.14.to.19
head(export.dt)
tail(export.dt)
?pivot_longer
head(export.panel.df)
head(export.panel.df)
export.df.in$year
levels(export.df.in$year)
unique(export.df.in$year)
export.plot.3
export.plot.0
export.df.to.plot$time.hours
export.plot.3
export.plot.base
export.plot.base
export.plot.base
library(gganimate)
install.packages("gganimate")
library(gganimate)
help(gganimate)
export.plot.base
anim_save("bob.gif")
export.df.t
export.df.to.plot$year
export.df.to.plot$year
export.df.to.plot.base$year
export.plot.base
export.plot.base
anim_save("bob.gif")
?view_follow
?glue
"amma{bobby}"
a <- "amma{bobby}"
a
print(a)
bobby <- "56"
a
glue(amma, bobby)
glue::glue(amma, bobby)
glue::glue(a, bobby)
bobby
glue::glue(a)
export.plot.base
export.plot.base
warnings()
names(export.df.to.plot)
export.plot.base
anim_save("bob.gif")
ordered.years
anim_save("bob.gif")
export.plot.base
print(export.plot.base)
anim_save("bob.gif")
?anim_save
?ggsave
axis.title
fred <- make.plot(export.df.to.plot)
traceback()
export.df.to.plot$year
export.df.to.plot$year %>% unique()
export.df.to.plot$year %>% unique()[[1]]
export.df.to.plot$year %>% as.character() %>% unique()[[1]]
export.df.to.plot$year %>% as.character()
export.df.to.plot$year %>% as.character() %>%unique()
export.df.to.plot$year %>% as.character() %>%unique()[1]
b <- export.df.to.plot$year %>% as.character() %>%unique()
b[[1]]
fred <- make.plot(export.df.to.plot)
fred <- make.plot(export.df.to.plot)
fred
head(export.df.to.plot)
head(export.df.to.plot) %>% group_by(year)
length(out)
out[[1]]
out[[2]]
out[[2]]
out[[5]]
dev.off()
out[[1]]
dev.off()
dev.off()
dev.off()
out[[1]]
out[[2]]
out[[3]]
ordered.countries
ordered.countries.list
head(amma)
fred <- make.plot(amma, "5666")
fred
head(amma)
amma$country
fred <- make.plot(amma, "5666")
fred <- make.plot(amma, "5666")
fred <- make.plot(amma, "5666")
ordered.countries
ordered.countries.list
dim(amma)
dim(amma)
fred <- make.plot(amma, "5666")
fred <- make.plot(amma, "5666")
fred <- make.plot(amma, "5666")
tail(amma)
head(amma)
amma$country
fred <- make.plot(amma, "5666")
fred <- make.plot(amma, "5666")
additional.labels.df
additional.labels.df
additional.labels.df
additional.labels.df
additional.labels.df %>% arrange(plot.group)
plot.order
additional.labels.df
additional.labels.df
additional.labels.df
length(ordered.countries.list)
fred <- make.plot(amma, "5666")
fred <- make.plot(amma, "5666")
fred
labels.df.to.plot
fred <- make.plot(amma, "5666")
fred
fred <- make.plot(amma, "5666")
fred
axis.title
export.df.to.plot$time.hours %>% max()
export.df.to.plot$time.hours %>% max(na.rm = TRUE)
fred <- add.e4t.branding(out[[1]])
fred <- add.e4t.branding(out[[1]], "babu")
fred <- add.e4t.branding(out[[1]], "babu")
out[[1]]
image_browse(out[[1]])
image_graph(out[[1]])
image_graph(out[[1]])
out[[1]]
dev.off()
dev.off()
out[[1]]
out[[1]]
print(out[[1]])
dev.off()
dev.off()
animation
img
animation
bob <- tbl_df(out)
rbind(bob[[1]], bob[[2]])
rbind(out[[1]], out[[2]])
out
img
img
out
img
dev.off
dev.off()
dev.off()
image_draw(out[[1]])
image_draw(out[[1]])
image_draw(out[[12])
image_draw(out[[2])
image_draw(out[[2]])
image_draw(out[[3]])
img
dev.off()
img
out[[1]]
c(out)
image_read(out[[1]])
image_graph(out[[1]])
image_browse(out[[1]])
list.file(pattern = ".gif")
list.files(pattern = ".gif")
ordered.years
list.files(pattern = ".gif")
list.files(pattern = ".png")
img.new
img.new
img.new %>% tbl_df()
c(img.new)
ing.new[[2]]
img.new[[2]]
img.new
c(img.new)
c(img.new[[1]], img.new[[2]] <- 
)
c(img.new[[1]], img.new[[2]])
unlist(img.new)
list(img.new)
?image_scale
image_read(img.files)
png.list
image_read(png.list)
png.list
png.list
images.list
animation
filter(export.df.to.plot, is.na(time.hours))
filter(export.df.to.plot, is.na(time.hours) & !country %in%c("LAB", "LAB2"))
filter(export.df.to.plot, !(is.na(time.hours) & !country %in%c("LAB", "LAB2")))
export.df.to.plot$country
